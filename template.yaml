AWSTemplateFormatVersion: '2010-09-09'
Description: 'Stage 1 of 3: Foundation - KMS Key, DynamoDB Table, SNS Topic, and SQS Queue.'

Resources:
  # The master key that will encrypt everything
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: 'Customer Managed Key for the text processing project'
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AllowRootUserToAdministerKey'
            Effect: 'Allow'
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'

  # The "filing cabinet" for storing results, encrypted with our key
  FileMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'file-metadata-table'
      AttributeDefinitions:
        - AttributeName: 'fileId'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'fileId'
          KeyType: 'HASH'
      BillingMode: 'PAY_PER_REQUEST'
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !Ref KMSKey

  # The "announcement system" for notifications, encrypted with our key
  ProcessingNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: 'processing-notifications'
      KmsMasterKeyId: !Ref KMSKey

  # The "error mailbox" for failed Lambda executions
  FailedExecutionsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'processing-dlq'
      KmsMasterKeyId: !Ref KMSKey

Outputs:
  KMSKeyArn:
    Description: 'ARN of the master KMS Key.'
    Value: !GetAtt KMSKey.Arn
  DynamoDBTableName:
    Description: 'Name of the DynamoDB table.'
    Value: !Ref FileMetadataTable
  SNSTopicArn:
    Description: 'ARN of the SNS topic.'
    Value: !Ref ProcessingNotificationTopic
  DeadLetterQueueArn:
    Description: 'ARN of the Dead Letter Queue.'
    Value: !GetAtt FailedExecutionsQueue.Arn